language: node_js

env:
  global:
    - CC_TEST_REPORTER_ID=c33e0157337760958191e73532ea32aca9e54dee6edd7a941e84f0e33bbe3165

#matrix:
#  allow_failures:
#    - node_js: 14

node_js:
  - 14

before_script:
  # Install meteor
  - curl https://install.meteor.com | /bin/sh
  # Add meteor to path (instead of asking for sudo in the Travis container)
  # We can then use the faster container infrastructure - http://docs.travis-ci.com/user/workers/container-based-infrastructure/
  - export PATH=$HOME/.meteor:$PATH
  #Â Ensure NODE_MODULE_VERSION matches Meteor.
  - meteor npm i -g yarn
  - meteor yarn
  - meteor yarn ts-compile
  # Start the test harness.
  - cd test_harness
  - date
  - meteor yarn
  - date
  - meteor run --port 3100&
  - METEOR_PID=$!
  # Need to wait for Meteor availability before the integration tests can run.
  - sleep 90
  - cd ..

  # Codecov preparation.
  - npm install -g codecov

  # CodeClimate preparation.
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter -d before-build

  - date

cache:
  directories:
    - node_modules
    - test_harness/node_modules

script:
  meteor yarn test-ci

after_script:
  - date
  # Stop the test harness.
  - kill $METEOR_PID

  # CodeCode report.
  - codecov

  # CodeClimate report.
  - ./cc-test-reporter after-build -d --exit-code $TRAVIS_TEST_RESULT
